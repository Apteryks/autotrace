# This is a basic workflow to help you get started with Actions

name: Testing on various platforms

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
         - '*'
  pull_request:
    branches:
         - '*'
env:
  DEB_DH_SHLIBDEPS_ARGS_ALL: "--dpkg-shlibdeps-params=--ignore-missing-info"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_all:
    strategy:
      matrix:
        os:
          - runs-on: ubuntu-18.04
          - runs-on: ubuntu-20.04
          - runs-on: macOS-latest
    runs-on: ${{ matrix.os.runs-on }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: build and run tests packages with all featured readers
        run: |
            if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt update
              sudo apt install -y libgraphicsmagick1-dev libpng-dev libexiv2-dev libtiff-dev libjpeg-dev libxml2-dev libbz2-dev libfreetype6-dev libpstoedit-dev autoconf automake libtool intltool autopoint
            elif [ "$RUNNER_OS" == "macOS" ]; then
              # TODO
              brew update
              perl -MCPAN -e "install XML::Parser"
              perl -e "require XML::Parser"
              for pkg in graphicsmagick pstoedit libpng exiv2 libtiff libjpeg libxml2 bzip2 freetype gettext intltool glib libtool autoconf automake pkg-config; do brew install $pkg || brew upgrade $pkg; done
            elif [ "$RUNNER_OS" == "Windows" ]; then
              # TODO
              echo "Windows not yet supported"
            else
              echo "$RUNNER_OS not supported"
            fi
            ./autogen.sh
            ./configure
            make
            make check
        shell: bash

  build_with_latest_imagemagick:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: build and run tests package against ImageMagick only
        run: |
            sudo apt update
            sudo apt install -y libmagickcore-6.q16-dev libpng-dev libexiv2-dev libtiff-dev libjpeg-dev libxml2-dev libbz2-dev libfreetype6-dev libpstoedit-dev autoconf automake libtool intltool autopoint
            ./autogen.sh
            ./configure --enable-magick-readers
            make
            make check

  build_with_latest_graphicsmagick:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: build and run tests package against GraphicsMagick only
        run: |
            sudo apt update
            sudo apt install -y libgraphicsmagick1-dev libpng-dev libexiv2-dev libtiff-dev libjpeg-dev libxml2-dev libbz2-dev libfreetype6-dev libpstoedit-dev autoconf automake libtool intltool autopoint
            ./autogen.sh
            ./configure --enable-magick-readers
            make
            make check
